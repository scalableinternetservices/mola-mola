From 82c17daf78e92d020feb455c45137b8865c51457 Mon Sep 17 00:00:00 2001
From: Chuyan Zhang <chuyan@ucsb.edu>
Date: Thu, 21 Nov 2024 14:34:20 -0800
Subject: [PATCH] create models

---
 Gemfile                                      |  4 ++
 Gemfile.lock                                 |  2 +
 app/models/comment.rb                        |  4 ++
 app/models/event.rb                          |  3 ++
 app/models/follow.rb                         |  5 ++
 app/models/invite.rb                         |  5 ++
 app/models/rsvp.rb                           |  4 ++
 app/models/user.rb                           |  7 +++
 db/migrate/20241121213407_create_users.rb    | 10 ++++
 db/migrate/20241121214630_create_events.rb   | 11 ++++
 db/migrate/20241121215138_create_rsvps.rb    | 11 ++++
 db/migrate/20241121215333_create_comments.rb | 11 ++++
 db/migrate/20241121215425_create_invites.rb  | 11 ++++
 db/migrate/20241121220919_create_follows.rb  | 11 ++++
 db/schema.rb                                 | 57 +++++++++++++++++++-
 test/fixtures/comments.yml                   | 11 ++++
 test/fixtures/events.yml                     | 11 ++++
 test/fixtures/follows.yml                    | 11 ++++
 test/fixtures/invites.yml                    | 11 ++++
 test/fixtures/rsvps.yml                      | 11 ++++
 test/fixtures/users.yml                      |  9 ++++
 test/models/comment_test.rb                  |  7 +++
 test/models/event_test.rb                    |  7 +++
 test/models/follow_test.rb                   |  7 +++
 test/models/invite_test.rb                   |  7 +++
 test/models/rsvp_test.rb                     |  7 +++
 test/models/user_test.rb                     |  7 +++
 27 files changed, 261 insertions(+), 1 deletion(-)
 create mode 100644 app/models/comment.rb
 create mode 100644 app/models/event.rb
 create mode 100644 app/models/follow.rb
 create mode 100644 app/models/invite.rb
 create mode 100644 app/models/rsvp.rb
 create mode 100644 app/models/user.rb
 create mode 100644 db/migrate/20241121213407_create_users.rb
 create mode 100644 db/migrate/20241121214630_create_events.rb
 create mode 100644 db/migrate/20241121215138_create_rsvps.rb
 create mode 100644 db/migrate/20241121215333_create_comments.rb
 create mode 100644 db/migrate/20241121215425_create_invites.rb
 create mode 100644 db/migrate/20241121220919_create_follows.rb
 create mode 100644 test/fixtures/comments.yml
 create mode 100644 test/fixtures/events.yml
 create mode 100644 test/fixtures/follows.yml
 create mode 100644 test/fixtures/invites.yml
 create mode 100644 test/fixtures/rsvps.yml
 create mode 100644 test/fixtures/users.yml
 create mode 100644 test/models/comment_test.rb
 create mode 100644 test/models/event_test.rb
 create mode 100644 test/models/follow_test.rb
 create mode 100644 test/models/invite_test.rb
 create mode 100644 test/models/rsvp_test.rb
 create mode 100644 test/models/user_test.rb

diff --git a/Gemfile b/Gemfile
index 501dad0..9bdabde 100644
--- a/Gemfile
+++ b/Gemfile
@@ -8,6 +8,10 @@ gem "sprockets-rails"
 
 gem "pg", "~> 1.5.9"
 
+# Used to securely hash user password
+# How to specify salt by the way?
+gem 'bcrypt', '~> 3.1.7'
+
 # Check the latest supported [https://docs.aws.amazon.com/elasticbeanstalk/latest/platforms/platforms-supported.html#platforms-supported.ruby]
 gem "puma", ">= 5.0"
 
diff --git a/Gemfile.lock b/Gemfile.lock
index c621ef9..56540ca 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -79,6 +79,7 @@ GEM
       securerandom (>= 0.3)
       tzinfo (~> 2.0)
     base64 (0.2.0)
+    bcrypt (3.1.20)
     benchmark (0.4.0)
     bigdecimal (3.1.8)
     bindex (0.8.1)
@@ -217,6 +218,7 @@ PLATFORMS
   x86_64-linux
 
 DEPENDENCIES
+  bcrypt (~> 3.1.7)
   bootsnap
   debug
   importmap-rails
diff --git a/app/models/comment.rb b/app/models/comment.rb
new file mode 100644
index 0000000..99218fd
--- /dev/null
+++ b/app/models/comment.rb
@@ -0,0 +1,4 @@
+class Comment < ApplicationRecord
+  belongs_to :user
+  belongs_to :event
+end
diff --git a/app/models/event.rb b/app/models/event.rb
new file mode 100644
index 0000000..0b88e3d
--- /dev/null
+++ b/app/models/event.rb
@@ -0,0 +1,3 @@
+class Event < ApplicationRecord
+  belongs_to :host, class_name: "User", foreign_key: "host_id"
+end
diff --git a/app/models/follow.rb b/app/models/follow.rb
new file mode 100644
index 0000000..60892b8
--- /dev/null
+++ b/app/models/follow.rb
@@ -0,0 +1,5 @@
+class Follow < ApplicationRecord
+  belongs_to :follower, class_name: "User", foreign_key: "follower_id"
+  belongs_to :followee, class_name: "User", foreign_key: "followee_id"
+  belongs_to :event
+end
diff --git a/app/models/invite.rb b/app/models/invite.rb
new file mode 100644
index 0000000..4e84da2
--- /dev/null
+++ b/app/models/invite.rb
@@ -0,0 +1,5 @@
+class Invite < ApplicationRecord
+  belongs_to :inviter, class_name: "User", foreign_key: "inviter_id"
+  belongs_to :invitee, class_name: "User", foreign_key: "invitee_id"
+  belongs_to :event
+end
diff --git a/app/models/rsvp.rb b/app/models/rsvp.rb
new file mode 100644
index 0000000..08cd405
--- /dev/null
+++ b/app/models/rsvp.rb
@@ -0,0 +1,4 @@
+class Rsvp < ApplicationRecord
+  belongs_to :user
+  belongs_to :event
+end
diff --git a/app/models/user.rb b/app/models/user.rb
new file mode 100644
index 0000000..b97aaf8
--- /dev/null
+++ b/app/models/user.rb
@@ -0,0 +1,7 @@
+class User < ApplicationRecord
+    has_secure_password
+
+    validates :email, presence: true, uniqueness: true
+    validates :password, presence: true, length: { minimum: 6 }
+    has_many :hosted_events, class_name: "Event", foreign_key: "host_id"
+end
diff --git a/db/migrate/20241121213407_create_users.rb b/db/migrate/20241121213407_create_users.rb
new file mode 100644
index 0000000..068df26
--- /dev/null
+++ b/db/migrate/20241121213407_create_users.rb
@@ -0,0 +1,10 @@
+class CreateUsers < ActiveRecord::Migration[7.1]
+  def change
+    create_table :users do |t|
+      t.string :email
+      t.string :password_digest
+
+      t.timestamps
+    end
+  end
+end
diff --git a/db/migrate/20241121214630_create_events.rb b/db/migrate/20241121214630_create_events.rb
new file mode 100644
index 0000000..b31de48
--- /dev/null
+++ b/db/migrate/20241121214630_create_events.rb
@@ -0,0 +1,11 @@
+class CreateEvents < ActiveRecord::Migration[7.1]
+  def change
+    create_table :events do |t|
+      t.string :title
+      t.datetime :date
+      t.references :host, null: false, foreign_key: { to_table: :users }
+
+      t.timestamps
+    end
+  end
+end
diff --git a/db/migrate/20241121215138_create_rsvps.rb b/db/migrate/20241121215138_create_rsvps.rb
new file mode 100644
index 0000000..08b8c44
--- /dev/null
+++ b/db/migrate/20241121215138_create_rsvps.rb
@@ -0,0 +1,11 @@
+class CreateRsvps < ActiveRecord::Migration[7.1]
+  def change
+    create_table :rsvps do |t|
+      t.string :response
+      t.references :user, null: false, foreign_key: true
+      t.references :event, null: false, foreign_key: true
+
+      t.timestamps
+    end
+  end
+end
diff --git a/db/migrate/20241121215333_create_comments.rb b/db/migrate/20241121215333_create_comments.rb
new file mode 100644
index 0000000..32c6221
--- /dev/null
+++ b/db/migrate/20241121215333_create_comments.rb
@@ -0,0 +1,11 @@
+class CreateComments < ActiveRecord::Migration[7.1]
+  def change
+    create_table :comments do |t|
+      t.references :user, null: false, foreign_key: true
+      t.references :event, null: false, foreign_key: true
+      t.string :content
+
+      t.timestamps
+    end
+  end
+end
diff --git a/db/migrate/20241121215425_create_invites.rb b/db/migrate/20241121215425_create_invites.rb
new file mode 100644
index 0000000..116d1be
--- /dev/null
+++ b/db/migrate/20241121215425_create_invites.rb
@@ -0,0 +1,11 @@
+class CreateInvites < ActiveRecord::Migration[7.1]
+  def change
+    create_table :invites do |t|
+      t.references :inviter, null: false, foreign_key: { to_table: :users }
+      t.references :invitee, null: false, foreign_key: { to_table: :users }
+      t.references :event, null: false, foreign_key: true
+
+      t.timestamps
+    end
+  end
+end
diff --git a/db/migrate/20241121220919_create_follows.rb b/db/migrate/20241121220919_create_follows.rb
new file mode 100644
index 0000000..a61099b
--- /dev/null
+++ b/db/migrate/20241121220919_create_follows.rb
@@ -0,0 +1,11 @@
+class CreateFollows < ActiveRecord::Migration[7.1]
+  def change
+    create_table :follows do |t|
+      t.references :follower, null: false, foreign_key: { to_table: :users }
+      t.references :followee, null: false, foreign_key: { to_table: :users }
+      t.references :event, null: false, foreign_key: true
+
+      t.timestamps
+    end
+  end
+end
diff --git a/db/schema.rb b/db/schema.rb
index f913998..50929f8 100644
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -10,8 +10,63 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema[7.1].define(version: 0) do
+ActiveRecord::Schema[7.1].define(version: 2024_11_21_215425) do
   # These are extensions that must be enabled in order to support this database
   enable_extension "plpgsql"
 
+  create_table "comments", force: :cascade do |t|
+    t.bigint "user_id", null: false
+    t.bigint "event_id", null: false
+    t.string "content"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["event_id"], name: "index_comments_on_event_id"
+    t.index ["user_id"], name: "index_comments_on_user_id"
+  end
+
+  create_table "events", force: :cascade do |t|
+    t.string "title"
+    t.datetime "date"
+    t.bigint "host_id", null: false
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["host_id"], name: "index_events_on_host_id"
+  end
+
+  create_table "invites", force: :cascade do |t|
+    t.bigint "inviter_id", null: false
+    t.bigint "invitee_id", null: false
+    t.bigint "event_id", null: false
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["event_id"], name: "index_invites_on_event_id"
+    t.index ["invitee_id"], name: "index_invites_on_invitee_id"
+    t.index ["inviter_id"], name: "index_invites_on_inviter_id"
+  end
+
+  create_table "rsvps", force: :cascade do |t|
+    t.string "response"
+    t.bigint "user_id", null: false
+    t.bigint "event_id", null: false
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["event_id"], name: "index_rsvps_on_event_id"
+    t.index ["user_id"], name: "index_rsvps_on_user_id"
+  end
+
+  create_table "users", force: :cascade do |t|
+    t.string "email"
+    t.string "password_digest"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+  end
+
+  add_foreign_key "comments", "events"
+  add_foreign_key "comments", "users"
+  add_foreign_key "events", "users", column: "host_id"
+  add_foreign_key "invites", "events"
+  add_foreign_key "invites", "users", column: "invitee_id"
+  add_foreign_key "invites", "users", column: "inviter_id"
+  add_foreign_key "rsvps", "events"
+  add_foreign_key "rsvps", "users"
 end
diff --git a/test/fixtures/comments.yml b/test/fixtures/comments.yml
new file mode 100644
index 0000000..4d07abe
--- /dev/null
+++ b/test/fixtures/comments.yml
@@ -0,0 +1,11 @@
+# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  user: one
+  event: one
+  content: MyString
+
+two:
+  user: two
+  event: two
+  content: MyString
diff --git a/test/fixtures/events.yml b/test/fixtures/events.yml
new file mode 100644
index 0000000..cde4de9
--- /dev/null
+++ b/test/fixtures/events.yml
@@ -0,0 +1,11 @@
+# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  title: MyString
+  date: 2024-11-21 21:46:30
+  host: one
+
+two:
+  title: MyString
+  date: 2024-11-21 21:46:30
+  host: two
diff --git a/test/fixtures/follows.yml b/test/fixtures/follows.yml
new file mode 100644
index 0000000..52fa600
--- /dev/null
+++ b/test/fixtures/follows.yml
@@ -0,0 +1,11 @@
+# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  follower: one
+  followee: one
+  event: one
+
+two:
+  follower: two
+  followee: two
+  event: two
diff --git a/test/fixtures/invites.yml b/test/fixtures/invites.yml
new file mode 100644
index 0000000..5731af2
--- /dev/null
+++ b/test/fixtures/invites.yml
@@ -0,0 +1,11 @@
+# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  inviter: one
+  invitee: one
+  event: one
+
+two:
+  inviter: two
+  invitee: two
+  event: two
diff --git a/test/fixtures/rsvps.yml b/test/fixtures/rsvps.yml
new file mode 100644
index 0000000..71729d4
--- /dev/null
+++ b/test/fixtures/rsvps.yml
@@ -0,0 +1,11 @@
+# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  response: MyString
+  user: one
+  event: one
+
+two:
+  response: MyString
+  user: two
+  event: two
diff --git a/test/fixtures/users.yml b/test/fixtures/users.yml
new file mode 100644
index 0000000..0f1914f
--- /dev/null
+++ b/test/fixtures/users.yml
@@ -0,0 +1,9 @@
+# Read about fixtures at https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+one:
+  email: MyString
+  password_digest: MyString
+
+two:
+  email: MyString
+  password_digest: MyString
diff --git a/test/models/comment_test.rb b/test/models/comment_test.rb
new file mode 100644
index 0000000..5a6feda
--- /dev/null
+++ b/test/models/comment_test.rb
@@ -0,0 +1,7 @@
+require "test_helper"
+
+class CommentTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/test/models/event_test.rb b/test/models/event_test.rb
new file mode 100644
index 0000000..c8465c1
--- /dev/null
+++ b/test/models/event_test.rb
@@ -0,0 +1,7 @@
+require "test_helper"
+
+class EventTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/test/models/follow_test.rb b/test/models/follow_test.rb
new file mode 100644
index 0000000..b31c4af
--- /dev/null
+++ b/test/models/follow_test.rb
@@ -0,0 +1,7 @@
+require "test_helper"
+
+class FollowTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/test/models/invite_test.rb b/test/models/invite_test.rb
new file mode 100644
index 0000000..1d0201f
--- /dev/null
+++ b/test/models/invite_test.rb
@@ -0,0 +1,7 @@
+require "test_helper"
+
+class InviteTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/test/models/rsvp_test.rb b/test/models/rsvp_test.rb
new file mode 100644
index 0000000..3500db0
--- /dev/null
+++ b/test/models/rsvp_test.rb
@@ -0,0 +1,7 @@
+require "test_helper"
+
+class RsvpTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
diff --git a/test/models/user_test.rb b/test/models/user_test.rb
new file mode 100644
index 0000000..5c07f49
--- /dev/null
+++ b/test/models/user_test.rb
@@ -0,0 +1,7 @@
+require "test_helper"
+
+class UserTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
-- 
2.47.0


